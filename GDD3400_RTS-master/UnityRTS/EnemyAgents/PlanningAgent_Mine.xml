<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PlanningAgent</name>
    </assembly>
    <members>
        <member name="T:GameManager.PlanningAgent">
            <summary>Planning Agent is the over-head planner that decided where
             individual units go and what tasks they perform.  Low-level 
             AI is handled by other classes (like pathfinding).
            </summary> 
        </member>
        <member name="T:GameManager.PlanningAgent.PlayerState">
            
        </member>
        <member name="P:GameManager.PlanningAgent.enemyAgentNbr">
            <summary>
            The enemy's agent number
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.mainMineNbr">
            <summary>
            My primary mine number
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.mainBaseNbr">
            <summary>
            My primary base number
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.mines">
            <summary>
            List of all the mines on the map
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.myWorkers">
            <summary>
            List of all of my workers
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.mySoldiers">
            <summary>
            List of all of my soldiers
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.myArchers">
            <summary>
            List of all of my archers
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.myBases">
            <summary>
            List of all of my bases
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.myBarracks">
            <summary>
            List of all of my barracks
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.myRefineries">
            <summary>
            List of all of my refineries
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemyWorkers">
            <summary>
            List of the enemy's workers
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemySoldiers">
            <summary>
            List of the enemy's soldiers
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemyArchers">
            <summary>
            List of enemy's archers
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemyBases">
            <summary>
            List of the enemy's bases
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemyBarracks">
            <summary>
            List of the enemy's barracks
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemyRefineries">
            <summary>
            List of the enemy's refineries
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.enemyGold">
            <summary>
            The amount of the enemy's gold
            </summary>
        </member>
        <member name="P:GameManager.PlanningAgent.buildPositions">
            <summary>
            List of the possible build positions for a 3x3 unit
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.heuristics">
            <summary>
            The values that will help the agent make decisions
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.learningValues">
            <summary>
            The values that will contribute to learning between
            rounds.
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.myStats">
            <summary>
            Keep track of the peak values for each 
            of my learning values, per round.
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.enemyStats">
            <summary>
            Keep track of the enemy's peak numbers
            such as maximum soldiers, workers, etc.
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.playerState">
            <summary>
            The state that the player's forces are in.
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.totalScore">
            <summary>
            The total score of all values compared between
            player agent and enemy agent.
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.exploringLeft">
            <summary>
            Check to see how things look to the elft
            </summary>
        </member>
        <member name="F:GameManager.PlanningAgent.exploringRight">
            <summary>
            Check to see how things look to the right
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.FindProspectiveBuildPositions(GameManager.EnumTypes.UnitType)">
            <summary>
            Finds all of the possible build locations for a specific UnitType.
            Currently, all structures are 3x3, so these positions can be reused
            for all structures (Base, Barracks, Refinery)
            Run this once at the beginning of the game and have a list of
            locations that you can use to reduce later computation.  When you
            need a location for a build-site, simply pull one off of this list,
            determine if it is still buildable, determine if you want to use it
            (perhaps it is too far away or too close or not close enough to a mine),
            and then simply remove it from the list and build on it!
            This method is called from the Awake() method to run only once at the
            beginning of the game.
            </summary>
            <param name="unitType">the type of unit you want to build</param>
        </member>
        <member name="M:GameManager.PlanningAgent.BuildBuilding(GameManager.EnumTypes.UnitType)">
            <summary>
            Build a building
            </summary>
            <param name="unitType"></param>
        </member>
        <member name="M:GameManager.PlanningAgent.AttackEnemy(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Attack the enemy
            </summary>
            <param name="myTroops"></param>
            <param name="enemies"></param>
        </member>
        <member name="M:GameManager.PlanningAgent.Learn">
            <summary>
            Called at the end of each round before remaining units are
            destroyed to allow the agent to observe the "win/loss" state
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.InitializeMatch">
            <summary>
            Called before each match between two agents.  Matches have
            multiple rounds. 
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.InitializeRound">
            <summary>
            Called at the beginning of each round in a match.
            There are multiple rounds in a single match between two agents.
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.UpdateGameState">
            <summary>
            Updates the game state for the Agent - called once per frame for GameManager
            Pulls all of the agents from the game and identifies who they belong to
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.Update">
            <summary>
            Update the GameManager - called once per frame
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.DoThing(System.String)">
            <summary>
            A method that takes a value and has the agents do the appropriate action based 
            on it.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GameManager.PlanningAgent.CalculateHeuristics">
            <summary>
            How the actions are calculated
            State-Based calculations done as part of the heuristics calculations
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.GatherGold">
            <summary>
            Gather gold at the closest mine and deliver it to the main base.
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.TrainWorkers">
            <summary>
            Train workers if the base is idle and not at max workers
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.TrainSoldiers">
            <summary>
            Train soldiers if the barracks is idle
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.TrainArchers">
            <summary>
            Train archers if the barracks is idle
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.FindClosestMineToWorker(System.Int32)">
            <summary>
            Find the mine closest to the worker
            </summary>
            <param name="workerNbr"></param>
            <returns></returns>
        </member>
        <member name="M:GameManager.PlanningAgent.TrackAgentValues">
            <summary>
            Keep track of the highest value that I get to in the round.
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.TrackEnemyValues">
            <summary>
            Keep track of the enemy's values for comparison
            </summary>
        </member>
        <member name="M:GameManager.PlanningAgent.CalculateLearningValues">
            <summary>
            Run calculations to provide value for match
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
